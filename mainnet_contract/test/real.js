const RLP = require("rlp");
const util = require("@ethereumjs/util");
const secp256k1 = require("secp256k1");
const HeaderReader = artifacts.require("HeaderReader");
const Subnet = artifacts.require("Subnet");

const hex2Arr = (hexString) => {
  if (hexString.length % 2 !== 0) {
      throw "Must have an even number of hex digits to convert to bytes";
  }
  var numBytes = hexString.length / 2;
  var byteArray = new Uint8Array(numBytes);
  for (var i=0; i<numBytes; i++) {
      byteArray[i] = parseInt(hexString.substr(i*2, 2), 16);
  }
  return byteArray;
}

contract("Subnet Real Sample Test", async accounts => {
  beforeEach(async () => {
    this.validators_addr = [
      "0x888c073313b36cf03CF1f739f39443551Ff12bbE",
      "0x5058dfE24Ef6b537b5bC47116A45F0428DA182fA",
      "0xefEA93e384a6ccAaf28E33790a2D1b2625BF964d"
    ];

    this.genesis_encoded = "0xf90295a00000000000000000000000000000000000000000000000000000000000000000a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a01440fad03eee4dc813445582d29593d336c6ee51c608a997827a4b2d75cf05f7a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bb760808463d8bdebb89d00000000000000000000000000000000000000000000000000000000000000005058dfe24ef6b537b5bc47116a45f0428da182fa888c073313b36cf03cf1f739f39443551ff12bbeefea93e384a6ccaaf28e33790a2d1b2625bf964d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000880000000000000000808080";
    this.genesis_hash = web3.utils.sha3(Buffer.from(hex2Arr(this.genesis_encoded.slice(2)))).toString("hex");
    this.block1_encoded = "0xf902a3a06f228d14f45ddfa59124871d8854a3533cd55021748e711f457d3eda6f4b8cc8a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794efea93e384a6ccaaf28e33790a2d1b2625bf964da0391364838a922acf944686ad94f3f8cc2189302ae085be123e72ec6550aaa990a0f56fb69db371169b9007d863f48c82e60f28e40b64657d87da08629c362716b8a037677206c85d7bf905a2f29d9380c65c8d6f7231b1c5a36cb628bc5ccc0fe4d0bb1008263088463d8c006aa02e802e6e3a06f228d14f45ddfa59124871d8854a3533cd55021748e711f457d3eda6f4b8cc88080c080a00000000000000000000000000000000000000000000000000000000000000000880000000000000000b83c5058dfe24ef6b537b5bc47116a45f0428da182fa888c073313b36cf03cf1f739f39443551ff12bbeefea93e384a6ccaaf28e33790a2d1b2625bf964db841f1c9e8a95d2ee5e018250871c18835bcc084a772fb324032eebb66255c1bc4bf5b263f303390b18ee7005d6f00c80795c52d2262cea3f9bf56920cca77fed4470180"
    this.block1_hash = web3.utils.sha3(Buffer.from(hex2Arr(this.block1_encoded.slice(2)))).toString("hex");

    this.lib = await HeaderReader.new();
    Subnet.link("HeaderReader", this.lib.address);
    this.subnet = await Subnet.new(
      this.validators_addr,
      2,
      this.genesis_encoded,
      this.block1_encoded,
      {"from": accounts[0]}
    );
  })

  it("Receive New Header", async() => {

    const block2_encoded = "0xf902f0a0c64e5a9ebf403a07c1bcb310444c63c02d948e62292d49bb2e0901ddaa82c426a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347945058dfe24ef6b537b5bc47116a45f0428da182faa077d2428369607f44b7c268b74a3a5ebafe3d1daa196eaec6ed41ec8abe07cebea007cdad4520ece7e258340b120f9bca2d3862df97b6b88bc4ab70142e82d60c21a037677206c85d7bf905a2f29d9380c65c8d6f7231b1c5a36cb628bc5ccc0fe4d0bb1008263088463d8c008b8b302f8b003f8ade3a0c64e5a9ebf403a07c1bcb310444c63c02d948e62292d49bb2e0901ddaa82c4260201f886b8418272904fe2d9d16141ec01cd607c062f6901da8d7eb4a9eb43886e7a89efa1825eef4bf95748675db8f06950baaf35645a9cafc0851cc2fcb5e972ac01d9498600b8418f3f70046dd509191ff10cbe82b259e54075d56faa1f908096959f0f9201baee40989886b03133a706b40b470230b3d876c4eb6282eb4a1606efee2105e28e6a0080a0000000000000000000000000000000000000000000000000000000000000000088000000000000000080b8414bc974f8680b7718396879a37ea60dc8b756a61b2b6117ea574a451f370631811d0077d7769072819dfafffb576a7f4a1d6d77634e7a7fae87961002cb73048b0180";
    const block2_hash = web3.utils.sha3(Buffer.from(hex2Arr(block2_encoded.slice(2)))).toString("hex");
    await this.subnet.receiveHeader(block2_encoded);

    const test_block2_encoded = await this.subnet.getHeader(block2_hash);
    assert.equal(block2_encoded, test_block2_encoded);
  });

  it("Confirm A Received Block", async() => {

    const block2_encoded = "0xf902f0a0c64e5a9ebf403a07c1bcb310444c63c02d948e62292d49bb2e0901ddaa82c426a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347945058dfe24ef6b537b5bc47116a45f0428da182faa077d2428369607f44b7c268b74a3a5ebafe3d1daa196eaec6ed41ec8abe07cebea007cdad4520ece7e258340b120f9bca2d3862df97b6b88bc4ab70142e82d60c21a037677206c85d7bf905a2f29d9380c65c8d6f7231b1c5a36cb628bc5ccc0fe4d0bb1008263088463d8c008b8b302f8b003f8ade3a0c64e5a9ebf403a07c1bcb310444c63c02d948e62292d49bb2e0901ddaa82c4260201f886b8418272904fe2d9d16141ec01cd607c062f6901da8d7eb4a9eb43886e7a89efa1825eef4bf95748675db8f06950baaf35645a9cafc0851cc2fcb5e972ac01d9498600b8418f3f70046dd509191ff10cbe82b259e54075d56faa1f908096959f0f9201baee40989886b03133a706b40b470230b3d876c4eb6282eb4a1606efee2105e28e6a0080a0000000000000000000000000000000000000000000000000000000000000000088000000000000000080b8414bc974f8680b7718396879a37ea60dc8b756a61b2b6117ea574a451f370631811d0077d7769072819dfafffb576a7f4a1d6d77634e7a7fae87961002cb73048b0180";
    const block2_hash = web3.utils.sha3(Buffer.from(hex2Arr(block2_encoded.slice(2)))).toString("hex");
    const block3_encoded = "0xf902f0a00b62b9aab5f1c93c01f6f097d2edda19f695716e9bb8d1aaa28368b63c261665a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794888c073313b36cf03cf1f739f39443551ff12bbea0b08c9351c5ff29abadc0870a89431682e697c2ca4eed924c3d9e47607d528e5ca03497c4c3e6e37f88b6596fd7964f526e62a0f05b615f0e040b4cf720c7a40f6da037677206c85d7bf905a2f29d9380c65c8d6f7231b1c5a36cb628bc5ccc0fe4d0bb1008263088463d8c00ab8b302f8b004f8ade3a00b62b9aab5f1c93c01f6f097d2edda19f695716e9bb8d1aaa28368b63c2616650302f886b84108588e92e72e73720e0cb2bba555e5d971cecad3241489a9e46d252bab28b6ae04e92edcfe37fc0cc003a82f18d2c41db027cba64f96cbf352b826c2eca2fb6d00b8415c599793de9f5aeb07a8daa691b459ef97359abfc9605759bfe157e35e90b3f576905c456162f5cea335555d4a892d4419ecba3a756b48eb7bc5c67762776c730180a0000000000000000000000000000000000000000000000000000000000000000088000000000000000080b8410f5120a1fbba4522d78aa9974672c5a5a5bbbeb2be1c54d8f6f76188f7eccb82333ab72753a9fd8825a36f5aee82e8204d136957a2cfd4845ed3d2f6ac67e4bb0180";
    const block4_encoded = "0xf902f0a087d42729495c62610bf8991f2ddae881d5f51c0061980e078a5477dbcee4b8fda01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794efea93e384a6ccaaf28e33790a2d1b2625bf964da0836b89f0d33d369e589fe727603a24efc847126942544d6da179d958c6c727b0a0313cb0bd8b9b9dc3de51e6a8de47e5fae7037d137430714611170da807502382a037677206c85d7bf905a2f29d9380c65c8d6f7231b1c5a36cb628bc5ccc0fe4d0bb1008263088463d8c00cb8b302f8b005f8ade3a087d42729495c62610bf8991f2ddae881d5f51c0061980e078a5477dbcee4b8fd0403f886b841559f3ac0aac7e010d0a9c7b2026742d605fff4240697fc32f88f8d6d7e92228c58a86e2c2474dc0661db470a3cf82de78a08954580406c434f1f4165b47800ab00b841ca17cf9d6fb9c16d9d55d24c88839459ca008ccb0b10af62518120b4392ff4f44e8169cc8cec6ce550be11264ed55cae48c56026a64d1651ceb94aa26abda9fa0180a0000000000000000000000000000000000000000000000000000000000000000088000000000000000080b8419c2262e64ad59c8ad6c7a2e3dbdd2acc28dea846a73b2e19a80a84f28b02cd5025858dcaa8fb897a96e4a66a1ed62fa6d894ff6d2a9822e9ee0093786f8ff2880080";
    const block5_encoded = "0xf902f0a08b69db7cbe2915b9bfbe4341232543c8ce7f476016d0255c4dca972e3715b598a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347945058dfe24ef6b537b5bc47116a45f0428da182faa0fa116454c543256a2eb2aef53460c09ea3aa7af9bfd7ccbb15f2167e7c612082a0420e59f747a344ae21e927a03d3073691d88b750b4de78439fceb4a1ef5d8088a037677206c85d7bf905a2f29d9380c65c8d6f7231b1c5a36cb628bc5ccc0fe4d0b90100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000105841908b1008263088463d8c00eb8b302f8b006f8ade3a08b69db7cbe2915b9bfbe4341232543c8ce7f476016d0255c4dca972e3715b5980504f886b8414fa8235f83ab6411599c42e821d622d0407f46afd6f884b86af1fea25804edf33111c26c1f3de621b4376c8753957961ebb9b0e5d5e47046377f4a7ef033921901b8415941a95c545bf50a07b037c9ea116f09c2782a1ba046576f143dcf672781f57f170a6ff3bcefa5352e94d1dd02f103410026f7dac283e7ce5c63cb31ba44dad70080a0000000000000000000000000000000000000000000000000000000000000000088000000000000000080b841293b4056bf7058548bc91eb3555c1d3dd21a250651edb2d1bbf642ee76aca027112c2b443eca0f588d9f491217b50e6c30af5dfa80f5750ff826be8a68572e6b0180";
    const block5_hash = web3.utils.sha3(Buffer.from(hex2Arr(block5_encoded.slice(2)))).toString("hex");

    await this.subnet.receiveHeader(block2_encoded);
    await this.subnet.receiveHeader(block3_encoded);
    await this.subnet.receiveHeader(block4_encoded);
    await this.subnet.receiveHeader(block5_encoded);

    const finalized = await this.subnet.getHeaderConfirmationStatus(block2_hash);
    const latest_blocks = await this.subnet.getLatestBlocks();
    assert.equal(finalized, true);
    assert.equal(latest_blocks["0"][0], block5_hash);
    assert.equal(latest_blocks["1"][0], block2_hash);

  });


});