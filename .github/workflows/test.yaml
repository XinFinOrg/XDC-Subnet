name: Deploy devnet

on:
  pull_request_target:
    branches:
      - develop


jobs:
  run_if:
    if: startsWith(github.head_ref, 'feature') ||  startsWith(github.head_ref, 'fix')
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: check out trigger branch
        run: |
          git fetch origin ${{ github.head_ref }}
          git checkout ${{ github.head_ref }}

      - name: check envs
        run: | 
          echo ${{ github.head_ref }}
          echo ${{ github.repository }}
          echo ${{ github.ref_name }}
          echo ${{ github.sha }}

      - name: test2
        run: cat example_file


     # - name: Docker login
      #   env:
      #     DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      #     DOCKER_PASSWORD: ${{secrets.DOCKER_ACCESS_TOKEN}}
      #   run: |
      #     echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      # - name: Determine Docker Image Name
      #   id: image
      #   run: |
      #     if [[ "${{github.ref_name}}" == "master" ]]; then
      #       echo "name= xinfinorg/xdcsubnets:latest" >> $GITHUB_OUTPUT
      #     else
      #       echo "name= xinfinorg/xdcsubnets:${{github.ref_name}}" >> $GITHUB_OUTPUT
      #     fi

      # - name: Build and push image
      #   run: |
      #     docker build . --file docker/Dockerfile --tag ${{ steps.image.outputs.name }}
      #     docker push ${{ steps.image.outputs.name }}

      # - name: trigger deploy workflow
      #   id: trigger_deploy
      #   run: |
      #     echo "RESPONSE_CODE=$( \
      #     curl -L \
      #     -o response.txt \
      #     -w %{response_code} \
      #     -s \
      #     -X POST \
      #     -H "Accept: application/vnd.github+json" \
      #     -H "Authorization: Bearer ${{ secrets.CICD_PAT }}" \
      #     -H "X-GitHub-Api-Version: 2022-11-28" \
      #     https://api.github.com/repos/hash-laboratories-au/xinfin-script/actions/workflows/subnet-deploy.yaml/dispatches \
      #     -d '{"ref":"test-ansible", "inputs":{"caller_repo": "${{ github.repository }}", "caller_ref": "${{ github.ref_name }}", "caller_sha": "${{ github.sha }}"}}' \
      #     )" >> $GITHUB_ENV

      # - name: Check response fail or success
      #   run: |
      #     cat response.txt
      #     echo "RESPONSE_CODE=${{ env.RESPONSE_CODE }}"
      #     if [ ${{ env.RESPONSE_CODE }} != 204 ]
      #     then
      #       exit 1
      #     fi